/**
 * om midi v3.0
 * After Effects 的音 MAD / YTPMV 辅助脚本。它是一个能够自动将 MIDI 文件转换为 After Effects 中关键帧的脚本。
 * 希望在 om midi 的帮助下，可以把人们从枯燥繁重的音画对齐中解救出来，把更多的精力投入到更有创造性的工作中。
 * 描述：读取一个 MIDI 序列，并为当前合成添加一个或多个新图层，其中包含各个 MIDI 轨道的音高、力度和持续时间等滑块控件。
 * 
 * 脚本原作者：David Van Brink (omino)、Dora (NGDXW)、韩琦、家鳖大帝
 * 脚本作者：兰音
 * 
 * 部署时间：2022/08/22 Monday 17:47:44
 * Copyright (c) 2022, Ranne
 * 
 * 原作者介绍：
 * Date: Sun Dec 25 22:58:10 PST 2011
 * Author: David Van Brink
 * This script is part of the omino adobe script suite.
 * The latest version can be found at http://omino.com/pixelblog/.
 * 
 * I write these because I like to. Please enjoy as you see fit.
 * 
 * Questions to poly@omino.com, subject line should start with "plugins" so my spam filter lets it in.
 * 
 * This file has been preprocessed to be standalone. I develop them against some reusable libraries
 * -- such as for dialog layout -- but for distribution it's nicer to have just one file. dvb 2007.
 * 
 * Description: This After Effects script reads a Standard MIDI file (.mid)
 * and creates layers and keyframes corresponding to the notes and controllers in that MIDI file.
 */

function t(t,i,e,o){var n;if("group"==i)n=t.add(i,void 0,o);else if("progressbar"==i)n=t.add(i,void 0,void 0,void 0,o);else if("scrollbar"==i||"slider"==i)n=t.add(i,void 0,void 0,void 0,void 0,o);else n=t.add(i,void 0,void 0,o);var s=n;if(null!=e)for(var r in e)if(Object.prototype.hasOwnProperty.call(e,r))s[r]=e[r];return s}function i(t){for(var i=[],e=1;e<arguments.length;e++)i[e-1]=arguments[e];for(var o=0,n=i;o<n.length;o++){var s=n[o];t.add("item",s)}return t.selection=0,t}var e,o={orientation:"column",alignment:"left",alignChildren:"left",spacing:2,margins:[10,5,10,0]},n=function(i){this.parent=i,this.tab=t(this.parent.tabs,"tab",{text:"空对象"}),this.group=t(this.tab,"group",o),this.pitch=t(this.group,"checkbox",{text:"音高"}),this.velocity=t(this.group,"checkbox",{text:"力度"}),this.duration=t(this.group,"checkbox",{text:"持续时间"}),this.scale=t(this.group,"checkbox",{text:"缩放"}),this.cwRotation=t(this.group,"checkbox",{text:"顺时针旋转"}),this.count=t(this.group,"checkbox",{text:"计数"}),this.bool=t(this.group,"checkbox",{text:"布尔"}),this.timeRemap=t(this.group,"checkbox",{text:"时间重映射（拉伸）"}),this.timeRemap2=t(this.group,"checkbox",{text:"时间重映射（截断）"})},s=function(i){this.parent=i,this.tab=t(this.parent.tabs,"tab",{text:"应用效果"}),this.group=t(this.tab,"group",o),this.timeRemap=t(this.group,"checkbox",{text:"时间重映射"}),this.hFlip=t(this.group,"checkbox",{text:"水平翻转"}),this.cwRotation=t(this.group,"checkbox",{text:"顺时针旋转"})};function r(t,i,o){t.onChange=function(){var n=t.text,s=n.match(e.POSITIVE_INT?/\d+/g:/\d+(\.\d+)?/g);if(s){n=s[0].replace(/^0+(?!\.)/g,"");var r=i==e.POSITIVE_INT?parseInt(n,10):parseFloat(n);if(r<=0||isNaN(r))n=String(o)}else n=String(o);t.text=n}}!function(t){t[t.POSITIVE_INT=0]="POSITIVE_INT",t[t.POSITIVE_DECIMAL=1]="POSITIVE_DECIMAL"}(e||(e={}));var a=function(){function o(o){this.parent=o,this.group=t(this.parent.toolsPanel,"group",{orientation:"column",alignment:["fill","fill"],alignChildren:"fill",spacing:2});var n=["fill","center"];this.bpmGroup=this.addGroup(),this.bpmLbl=this.addLabel(this.bpmGroup,"BPM"),this.bpmTxt=t(this.bpmGroup,"edittext",{text:"120",alignment:n}),this.beatGroup=this.addGroup(),this.beatLbl=this.addLabel(this.beatGroup,"节拍"),this.beatTxt=t(this.beatGroup,"edittext",{text:"4",alignment:n}),this.markOnGroup=this.addGroup(),this.markOnLbl=this.addLabel(this.markOnGroup,"标记在"),this.markOnCombo=t(this.markOnGroup,"dropdownlist",{alignment:n}),i(this.markOnCombo,"新建空对象图层","当前图层"),this.startTimeGroup=this.addGroup(),this.startTimeLbl=this.addLabel(this.startTimeGroup,"开始位置"),this.startTimeCombo=t(this.startTimeGroup,"dropdownlist",{alignment:n}),i(this.startTimeCombo,"显示开始时间","当前时间","工作区域","0"),r(this.beatTxt,e.POSITIVE_INT,4),r(this.bpmTxt,e.POSITIVE_DECIMAL,120)}return o.prototype.addGroup=function(){return t(this.group,"group",{orientation:"row",spacing:7,alignment:"fill",alignChildren:"fill"})},o.prototype.addLabel=function(i,e){var o=t(i,"statictext",{text:e});return b(o),o},o}(),l=function(i){this.parent=i,this.tab=t(this.parent.tabs,"tab",{text:"工具"}),this.group=t(this.tab,"group",{orientation:"column",alignment:"fill",alignChildren:"fill",margins:[10,5,0,0]}),this.toolsCombo=t(this.group,"dropdownlist"),this.toolsCombo.add("item","标记生成"),this.toolsCombo.selection=0,this.toolsPanel=t(this.group,"group",{alignment:"fill",alignChildren:"fill"}),this.marker=new a(this)};var h=function(t){this.control=t.add("panel"),this.control.alignment=["fill","top"]},u=function(t,i){if(!app.settings.haveSetting("om_midi",t))return i;else{var e=app.settings.getSetting("om_midi",t),o=void 0;if("string"==typeof i)o=e;else if("number"==typeof i)o=Number(e);else if("boolean"==typeof i)o="0"!==e;else throw new Error("不支持的类型。");return o}},p=function(t,i){var e=i;if("boolean"==typeof i)e=e?"1":"0";app.settings.saveSetting("om_midi",t,e.toString())},c={zh:"确定",en:"OK"},g={zh:"取消",en:"Cancel"},d=function(){function e(){var e=this;if(this.window=new Window("dialog","设置",void 0,{resizeable:!1}),null===this.window)throw new Error("无法找到或创建窗口。");this.group=t(this.window,"group",{orientation:"column",alignChildren:"fill",alignment:"fill"}),this.aboutLbl=t(this.group,"statictext",{text:"读取一个 MIDI 序列，并为当前合成添加一个或多个新图层，其中包含各个 MIDI 轨道的音高、力度和持续时间等滑块控件。"},{multiline:!0}),this.separator=new h(this.group),this.languageGroup=t(this.group,"group",{orientation:"row"}),this.languageLbl=t(this.languageGroup,"statictext",{text:"语言"}),this.langugaeCombo=t(this.languageGroup,"dropdownlist"),i(this.langugaeCombo,"应用默认值","简体中文","English","日本語"),this.usingSelectedLayerName=t(this.group,"checkbox",{text:"使用选择图层名称而不是轨道名称"}),this.usingSelectedLayerName.value=u("UsingSelectedLayerName",!1),this.buttonGroup=t(this.group,"group",{orientation:"row",alignment:["fill","bottom"],alignChildren:["right","center"]}),this.okBtn=t(this.buttonGroup,"button",{text:localize(c)}),this.cancelBtn=t(this.buttonGroup,"button",{text:localize(g)}),this.window.defaultElement=this.okBtn,this.window.cancelElement=this.cancelBtn,this.okBtn.onClick=function(){p("UsingSelectedLayerName",e.usingSelectedLayerName.value),e.window.close()}}return e.prototype.show=function(){this.window.center(),this.window.show()},e}(),m=function(){function i(i){var o=this;this.window=i,this.group=t(this.window,"group",{orientation:"column",alignChildren:"fill",alignment:"fill"});var a={orientation:"row",spacing:7},h=["fill","center"];this.selectMidiGroup=t(this.group,"group",a),this.selectMidiLbl=t(this.selectMidiGroup,"statictext",{text:"MIDI 文件"}),b(this.selectMidiLbl),this.selectMidiBtn=t(this.selectMidiGroup,"button",{text:"...",bounds:[0,0,15,22]}),this.selectMidiName=t(this.selectMidiGroup,"statictext",{text:"未选择",alignment:h}),this.selectTrackGroup=t(this.group,"group",a),this.selectTrackLbl=t(this.selectTrackGroup,"statictext",{text:"选择轨道"}),b(this.selectTrackLbl),this.selectTrackBtn=t(this.selectTrackGroup,"button",{text:"",alignment:h,maximumSize:[1e5,22]}),this.selectBpmGroup=t(this.group,"group",a),this.selectBpmLbl=t(this.selectBpmGroup,"statictext",{text:"设定 BPM"}),b(this.selectBpmLbl),this.selectBpmTxt=t(this.selectBpmGroup,"edittext",{text:"120",alignment:h}),this.tabs=t(this.group,"tabbedpanel",{alignment:["fill","fill"]}),this.buttonGroup=t(this.group,"group",{orientation:"row",alignment:["fill","bottom"]}),this.applyBtn=t(this.buttonGroup,"button",{text:"应用",alignment:"left"}),this.settingBtn=t(this.buttonGroup,"button",{text:"设置",alignment:["right","center"]}),this.nullObjTab=new n(this),this.applyEffectsTab=new s(this),this.toolsTab=new l(this),r(this.selectBpmTxt,e.POSITIVE_DECIMAL,120),this.selectMidiBtn.onClick=function(){var t=File.openDialog("选择一个 MIDI 序列","MIDI 序列:*.mid;*.midi,所有文件:*.*");if(o.selectMidiName.text=t.displayName,t&&t.open("r")){t.encoding="binary";var i=t.read();t.close(),alert(i.charCodeAt(0).toString(16))}},this.applyBtn.onClick=function(){var t=function(){var t=app.project.activeItem;if(!isValid(t))return null;else return t}();if(null!==t){t.layers.addNull(1e5).name="fuck"}},this.settingBtn.onClick=function(){(new d).show()}}return i.build=function(t,e){var o=t instanceof Panel?t:new Window("palette",e.scriptName+" v"+e.version,void 0,{resizeable:!0});if(null===o)throw new Error("无法找到或创建窗口。");var n=new i(o);if(o instanceof Window)o.onResizing=o.onResize=function(){return o.layout.resize()},o.center(),o.show();else o.layout.layout(!0),o.layout.resize();return n},i}();function b(t){t.minimumSize=[60,Number.MAX_VALUE]}m.build(this,{scriptName:"om midi",version:"3.0"});
